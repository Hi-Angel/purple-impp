#include <variant>
#include <vector>
#include <iterator>
#include "common-consts.h"
#include "protocol.h"

using namespace std;

int main(int argc, char *argv[]) {
    const uint8_t request[] = {0x6f, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x80,
                               0xf7, 0x26, 0x86, 0x00, 0x00, 0x00, 0x06, 0x00, 0x01,
                               0x00, 0x02, 0x00, 0x03};
    const uint8_t request2[]= {0x6f, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00,
                               0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x06, 0x00, 0x01,
                               0x00, 0x02, 0x00, 0x03};
    const uint8_t request3[] = {0x6f, 0x02, 0x00, 0x00, 0x00, 0x02, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x78, 0x00, 0x01, 0x00, 0x08, 0x54, 0x72, 0x69, 0x6c, 0x6c, 0x69, 0x61, 0x6e, 0x00, 0x02, 0x00, 0x07, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x73, 0x00, 0x04, 0x00, 0x04, 0x69, 0x33, 0x38, 0x36, 0x00, 0x05, 0x00, 0x03, 0x35, 0x2e, 0x33, 0x00, 0x06, 0x00, 0x02, 0x31, 0x31, 0x00, 0x08, 0x00, 0x0a, 0x53, 0x54, 0x41, 0x52, 0x53, 0x43, 0x52, 0x45, 0x41, 0x4d, 0x00, 0x0b, 0x00, 0x02, 0x00, 0x01, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x0d, 0x00, 0x12, 0x00, 0x01, 0x42, 0x04, 0x00, 0x02, 0x42, 0x09, 0x42, 0x03, 0x42, 0x06, 0x42, 0x05, 0x42, 0x07, 0x42, 0x08, 0x00, 0x07, 0x00, 0x19, 0x54, 0x72, 0x69, 0x6c, 0x6c, 0x69, 0x61, 0x6e, 0x2f, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x73, 0x20, 0x35, 0x2e, 0x33, 0x2e, 0x30, 0x2e, 0x31, 0x31};
    print_tlv_packet(request, sizeof(request));
    print_tlv_packet(request2, sizeof(request2));
    print_tlv_packet(request3, sizeof(request3));

    tlv_packet_data foo = tlv_packet_data {
    head : tlv_packet_header {magic : magic, channel : tlv_packet_header::tlv},
    flags    : tlv_packet_data::TLV_FLAGS::request,
    family   : tlv_packet_data::FAMILY::device,
    msg_type : 1,
    sequence : 1,
    block  : {tlv_unit {
        type   : DEVICE::CLIENT_NAME,
        val : { 0x54, 0x72, 0x69, 0x6C, 0x6C, 0x69, 0x61, 0x6E }
            }}
    };
    puts("now foo:");
    print_tlv_packet_data(foo);
    puts((char*)foo.block[0].val.data());
}
